{"version":3,"sources":["components/PhoneForm/PhoneForm.module.css","components/ContactList/ContactList.module.css","components/FilterContacts/FilterContacts.module.css","components/MainContainer/MainContainer.module.css","components/PhoneForm/PhoneForm.jsx","components/FilterContacts/FilterContacts.jsx","components/ContactList/ContactList.jsx","components/MainContainer/MainContainer.jsx","App.js","index.js"],"names":["module","exports","PhoneForm","state","name","number","handleInputChange","e","data","currentTarget","value","setState","addToContacts","preventDefault","props","onSubmit","resetForm","this","className","s","form","formLabel","formInput","type","pattern","title","required","onChange","Component","FilterContacts","findForm","findFormLabel","ContactList","onDeleteItem","filtered","contacts","filter","item","toLowerCase","trim","includes","list","map","id","deleteBtn","onClick","MainContainer","children","container","App","formSubmitHandler","find","alert","prevState","newItem","uuidv4","handleFilterField","event","target","deleteButtonHandler","contact","JSON","parse","localStorage","getItem","prevProps","length","setItem","stringify","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eab6911c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhoneForm_form__3W7TC\",\"formInput\":\"PhoneForm_formInput__32Goc\",\"formLabel\":\"PhoneForm_formLabel__2s0v2\",\"addToContacts\":\"PhoneForm_addToContacts__1uuag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3QhMP\",\"item\":\"ContactList_item__2zYLX\",\"deleteBtn\":\"ContactList_deleteBtn__1eBHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findForm\":\"FilterContacts_findForm__13uJw\",\"findFormLabel\":\"FilterContacts_findFormLabel__wUXR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainContainer_container__1ayEv\"};","import React, { Component } from \"react\";\nimport s from \"components/PhoneForm/PhoneForm.module.css\";\n\nclass PhoneForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const data = e.currentTarget.value;\n    this.setState({ [e.currentTarget.name]: data });\n  };\n\n  addToContacts = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.addToContacts} className={s.form}>\n        <label className={s.formLabel}>\n          Name\n          <input\n            className={s.formInput}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={s.formLabel}>\n          Number\n          <input\n            className={s.formInput}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button className={s.addToContacts} type=\"submit\">\n          Add to contacts\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default PhoneForm;\n","import React, { Component } from \"react\";\nimport s from \"components/FilterContacts/FilterContacts.module.css\";\n\nclass FilterContacts extends Component {\n  render() {\n    return (\n      <form className={s.findForm}>\n        <label className={s.findFormLabel}>\n          Find contacts by name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={this.props.value}\n            onChange={this.props.onSubmit}\n          />\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default FilterContacts;\n","import s from \"components/ContactList/ContactList.module.css\";\n\nconst ContactList = ({ data, onDeleteItem }) => {\n  const { contacts } = data;\n  const filtered = contacts.filter((item) => {\n    return item.name\n      .toLowerCase()\n      .trim()\n      .includes(data.filter.toLowerCase().trim());\n  });\n  return (\n    <ul className={s.list}>\n      {filtered.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              className={s.deleteBtn}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onDeleteItem(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import s from \"components/MainContainer/MainContainer.module.css\";\n\nfunction MainContainer({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default MainContainer;\n","import React from \"react\";\nimport PhoneForm from \"components/PhoneForm/PhoneForm\";\nimport FilterContacts from \"components/FilterContacts/FilterContacts\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport MainContainer from \"components/MainContainer/MainContainer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contacts: [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ],\n      filter: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const data = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (data !== null) {\n      this.setState({\n        contacts: data,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts.length !== prevState.contacts.length) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = (data) => {\n    this.state.contacts.find(\n      (item) =>\n        item.name.toLowerCase().trim() === data.name.toLowerCase().trim()\n    )\n      ? alert(`${data.name} is already in contacts`)\n      : this.setState((prevState) => {\n          let newArr = [];\n          const newItem = {\n            id: uuidv4(),\n            name: data.name,\n            number: data.number,\n          };\n\n          newArr = [...prevState.contacts, newItem];\n          return { contacts: newArr };\n        });\n  };\n\n  handleFilterField = (event) => this.setState({ filter: event.target.value });\n\n  handleInputChange = (e) =>\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n\n  deleteButtonHandler = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => {\n        return contact.id !== id;\n      }),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <MainContainer>\n          <h1>Phonebook</h1>\n          <PhoneForm onSubmit={this.formSubmitHandler} />\n          <h2>Contacts:</h2>\n          <FilterContacts\n            value={this.state.filter}\n            onSubmit={this.handleFilterField}\n          />\n          <ContactList\n            data={this.state}\n            onDeleteItem={this.deleteButtonHandler}\n          />\n        </MainContainer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}